# GitHub Actions workflow to automate security scans on the codebase and infrastructure.
# Addresses 'Security and Compliance' requirements (Technical Specification/4.13 Security and Compliance, IDs TR-SC-013-4, TR-SC-013-6, TR-SC-013-7).

name: 'Security Scans'

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
# Triggers workflow on push and pull request events to 'main' and 'develop' branches.
# Ensures continuous security checks on critical branches as per TR-SC-013-4 (Conduct regular security audits and vulnerability assessments).

env:
  CODEQL_LANGUAGE: 'javascript,python'
  CODEQL_DEBUG: 'true'

jobs:
  security-scan:
    name: 'Security Scan'
    runs-on: ubuntu-latest
    # This job performs security scans on the codebase and infrastructure to detect vulnerabilities and ensure compliance.
    # Addresses requirements:
    # - TR-SC-013-4: Conduct regular security audits and vulnerability assessments.
    # - TR-SC-013-6: Implement automated monitoring and alerting for unauthorized access attempts.
    # - TR-SC-013-7: Maintain comprehensive audit logs for all system activities.

    steps:
      - name: 'Checkout Repository'
        # Step 1: Checkout the repository.
        # Uses 'actions/checkout' to clone the repository code.
        # External dependency: 'actions/checkout' (version v2)
        # Ensures the workflow can access the repository code for scanning.
        # Reference: TR-SC-013-7 (Maintain comprehensive audit logs for all system activities).
        uses: actions/checkout@v2
        # Importing 'actions/checkout' version v2.

      - name: 'Initialize CodeQL'
        # Step 2: Initialize CodeQL for code analysis.
        # Uses 'github/codeql-action/init' to set up the CodeQL tool.
        # External dependency: 'github/codeql-action/init' (version v1)
        # Prepares the environment for security scanning.
        # Reference: TR-SC-013-4 (Conduct regular security audits and vulnerability assessments).
        uses: github/codeql-action/init@v1
        # Importing 'github/codeql-action/init' version v1.
        with:
          languages: ${{ env.CODEQL_LANGUAGE }}

      - name: 'Build Codebase'
        # Step 3: Build the codebase to prepare for analysis.
        # Installs all necessary dependencies for the backend services and web application.
        # Ensures the code is in a state suitable for accurate security scanning.
        # Reference: TR-SC-013-4 (Conduct regular security audits and vulnerability assessments).
        run: |
          echo "Setting up Python environments..."
          # Install Python dependencies for backend services.
          pip install --user -r src/backend/authentication_service/requirements.txt
          pip install --user -r src/backend/authorization_service/requirements.txt
          pip install --user -r src/backend/incident_management_service/requirements.txt
          pip install --user -r src/backend/playbook_engine/requirements.txt
          pip install --user -r src/backend/ai_recommendation_engine/requirements.txt
          pip install --user -r src/backend/notification_service/requirements.txt

          echo "Setting up Node.js environment..."
          # Install Node.js dependencies for web application.
          cd src/web
          npm install
          cd ../..

          echo "Building Docker images..."
          # Build Docker images to ensure Dockerfiles are correctly configured.
          docker build -t backend-image -f infrastructure/docker/Dockerfile.backend .
          docker build -t web-image -f infrastructure/docker/Dockerfile.web .

      - name: 'Perform CodeQL Analysis'
        # Step 4: Run CodeQL analysis to detect security vulnerabilities.
        # Uses 'github/codeql-action/analyze' to perform the analysis.
        # External dependency: 'github/codeql-action/analyze' (version v1)
        # Analyzes the codebase for potential security issues.
        # Reference: TR-SC-013-4 (Conduct regular security audits and vulnerability assessments).
        uses: github/codeql-action/analyze@v1
        # Importing 'github/codeql-action/analyze' version v1.
        with:
          debug: ${{ env.CODEQL_DEBUG }}

      - name: 'Upload CodeQL Results'
        # Step 5: Upload the CodeQL analysis results.
        # Makes the results available for developers and auditors.
        # Supports maintaining audit logs (TR-SC-013-7).
        run: echo "CodeQL analysis completed. Results are uploaded for review."
        # This step ensures transparency and supports compliance efforts.