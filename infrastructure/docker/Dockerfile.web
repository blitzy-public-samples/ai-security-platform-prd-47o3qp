# Dockerfile for building the web application's Docker image
# Addresses Requirement: Containerization and Deployment
# Location: Technical Specification/4.6 User and System Management
# Description: Ensure the web application is containerized for consistent deployment across environments.

# Use the official Node.js 14 image as the base image
# External Dependency: Node.js version 14 (Base image for running Node.js applications)
FROM node:14

# Set the working directory inside the container
# Global Variable: WORKDIR is set to /app
WORKDIR /app

# Copy the package.json and package-lock.json files into the container
# Internal Dependency:
# - package.json (src/web/package.json) defines project dependencies and scripts for building and running the web application
COPY package.json package-lock.json ./

# Install all dependencies listed in package.json
# External Dependency: npm version latest (Node package manager for installing dependencies)
# Note: npm comes bundled with the Node.js base image
RUN npm install

# Copy the entire web application codebase into the container
# Includes all source code and configuration files necessary to build the application
COPY . .

# Build the application using Webpack with the production configuration
# Internal Dependencies:
# - webpack.config.js (src/web/webpack.config.js) configures Webpack to bundle JavaScript, TypeScript, and CSS files
# - .babelrc (src/web/.babelrc) configures Babel presets for transpiling code
RUN npm run build

# Expose the necessary port for the web application
# Assumes the application runs on port 3000
EXPOSE 3000

# Define the command to start the web application
# Uses the "start" script defined in package.json under "scripts"
CMD ["npm", "start"]